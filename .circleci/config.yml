version: 2.1

# --------------------------------
# common : base
# --------------------------------

orbs:
  docker: circleci/docker@1.0.1

node_build: &node_build
  docker:
    - image: circleci/node:latest

# --------------------------------
# common : steps
# --------------------------------

step_cache_restore_yarn: &step_cache_restore_yarn
  name: 'Restore Cache: YARN Dependencies'
  keys:
    - yarn-packages-{{ checksum "yarn.lock" }}
    - node-v1-{{ .Branch }}-
    - node-v1-

step_cache_save_yarn: &step_cache_save_yarn
  name: 'Save Cache: YARN Dependencies'
  paths:
    - ~/.cache/yarn # location depends on yarn version
  key: yarn-packages-{{ checksum "yarn.lock" }}

step_run_install_yarn_dependencies: &step_run_install_yarn_dependencies
  name: 'Install YARN Dependencies'
  command: |
    yarn install

step_test: &step_test
  name: 'Run Tests'
  command: |
    yarn run test

# --------------------------------
# env
# --------------------------------

uat_in_app_environment: &uat_in_app_environment
  name: 'UAT in app env variables'
  command: |
    echo 'REACT_APP_BLOCK_SYNC_URL=https://block_sync_pandora.ixo.world' >> .env
    echo 'REACT_APP_IXO_WORLD_ORIGIN=https://uat.ixo.world' >> .env
    echo 'REACT_APP_ASSISTANT_URL=https://bf-ixo-world.development.agents.botfront.cloud' >> .env
    echo 'REACT_APP_KYC_LINK=https://signup.ixo.world' >> .env
    echo 'REACT_APP_IXO_TOKEN_CONTRACT_ADDRESS=0x827a41c26784e0f51081e6d26687bff9c1c667e6' >> .env
    echo 'REACT_APP_PROJECT_REGISTRY_CONTRACT_ADDRESS=0xfe45b990a1dd890adfac13b0a9c77758cc83a862' >> .env
    echo 'REACT_APP_FEE_PER_CLAIM_FEE=0.6' >> .env
    echo 'REACT_APP_FEE_PER_EVALUATION=0.4' >> .env
    echo 'REACT_APP_FEE_OVERHEAD=1.3' >> .env
    echo 'REACT_APP_CHAIN_ID=pandora-1' >> .env
    echo 'REACT_APP_NAME=IXO' >> .env
    echo 'REACT_APP_GAIA_URL=https://ixo-testnet-validator-mt.simply-vc.com.mt/api' >> .env
    echo 'REACT_APP_GOOGLE_API_KEY=AIzaSyDpFiV_PlNEos214wqgOCUpkezMStOyheA' >> .env
    echo 'REACT_APP_PDS_URL=https://pds_pandora.ixo.world/' >> .env
    echo 'REACT_APP_EMBEDLY_KEY=fa2749f731a54587820cf4fcfaa53d30' >> .env

prod_in_app_environment: &prod_in_app_environment
  name: 'Prod in app env variables'
  command: |
    echo 'REACT_APP_BLOCKCHAIN_NODE_URL=http://blockchain_paris_mainnet.ixo.world:46657' >> .env
    echo 'REACT_APP_BLOCK_SYNC_URL=https://explorer_paris_mainnet.ixo.world' >> .env
    echo 'REACT_APP_IXO_WORLD_ORIGIN=https://ixo.world' >> .env
    echo 'REACT_APP_KYC_LINK=https://signup.ixo.world' >> .env
    echo 'REACT_APP_IXO_TOKEN_CONTRACT_ADDRESS=0x519D822F0832b8e8C8DfC594E718f8dfdAE74B47' >> .env
    echo 'REACT_APP_PROJECT_REGISTRY_CONTRACT_ADDRESS=0x...' >> .env
    echo 'REACT_APP_FEE_PER_CLAIM_FEE=0.6' >> .env
    echo 'REACT_APP_FEE_PER_EVALUATION=0.4' >> .env
    echo 'REACT_APP_FEE_OVERHEAD=1.3' >> .env

# --------------------------------
# jobs
# --------------------------------

jobs:
  test:
    <<: *node_build
    steps:
      - checkout
      - restore_cache: *step_cache_restore_yarn
      - run: *step_run_install_yarn_dependencies
      - save_cache: *step_cache_save_yarn
      - run: *step_test

# --------------------------------
# workflows
# --------------------------------

workflows:
  version: 2
  build_test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - dev
                - master

  uat_publish_docker:
    jobs:
      - test:
          filters:
            branches:
              only:
                - dev
      - docker/publish:
          after_checkout:
            - run:
              name: Install node@latest
              command: |
                set +e
                curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
                export NVM_DIR="/opt/circleci/.nvm"
                [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
                nvm install node
                nvm use node
                
                # Each step uses the same `$BASH_ENV`, so need to modify it
                echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
                echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
            - run: node --version
            - run: *uat_in_app_environment
            - restore_cache: *step_cache_restore_yarn
            - run: *step_run_install_yarn_dependencies
            - save_cache: *step_cache_save_yarn
          image: trustlab/ixo-web
          tag: uat
          requires:
            - test
          filters:
            branches:
              only:
                - dev
  prod_publish_docker:
    jobs:
      #- test:
      #   filters:
      #    branches:
      #      only:
      #       - dev
      - docker/publish:
          after_checkout:
            - run: *prod_in_app_environment
            - restore_cache: *step_cache_restore_yarn
            - run: *step_run_install_yarn_dependencies
            - save_cache: *step_cache_save_yarn
          image: trustlab/ixo-web
          tag: prod
          # requires:
          # - test
          filters:
            branches:
              only:
                - master
